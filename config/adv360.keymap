#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/backlight.h>

#define MO_TOG(layer) &mo_tog layer layer   // Macro to apply momentary-layer-on-hold/toggle-layer-on-tap to a specific layer

/ {
    behaviors {
      #include "macros.dtsi"

      hm: homerow_mods {
        compatible = "zmk,behavior-hold-tap";
        label = "HOMEROW_MODS";
        #binding-cells = <2>;
        tapping-term-ms = <200>;
        quick_tap_ms = <175>;
        flavor = "tap-preferred";
        bindings =
            <&kp>,
            <&kp>;
      };

      hl: homerow_layer {
        compatible = "zmk,behavior-hold-tap";
        label = "HOMEROW_LAYERS";
        #binding-cells = <2>;
        tapping-term-ms = <200>;
        quick_tap_ms = <175>;
        flavor = "tap-preferred";
        bindings =
            <&mo>,
            <&kp>;
      };

      mo_tog: behavior_mo_tog {
        compatible = "zmk,behavior-hold-tap";
        label = "mo_tog";
        #binding-cells = <2>;
        flavor = "hold-preferred";
        tapping-term-ms = <200>;
        bindings = <&mo>, <&tog>;
      };

      caps_word {
        compatible = "zmk,behavior-caps-word";
        label = "CAPS_WORD";
        #binding-cells = <0>;
        continue-list = <UNDERSCORE MINUS>;
      };

      sticky_shift: sticky_shift {
        compatible = "zmk,behavior-tap-dance";
        label = "sticky_shift";
        #binding-cells = <0>;
        bindings = <&caps_word>, <&kp LSHFT>;
      };

    };

    keymap {
      compatible = "zmk,keymap";

      /*
       * Keyboard layout:
       * +-------------------------+-------------+----------+-------------+-------------------------+
       * |  [ ][ ][ ][ ][ ][ ][ ]  |             |          |             |  [ ][ ][ ][ ][ ][ ][ ]  |
       * |  [ ][ ][ ][ ][ ][ ][ ]  |             |          |             |  [ ][ ][ ][ ][ ][ ][ ]  |
       * |  [ ][ ][ ][ ][ ][ ][ ]  |     [ ][ ]  |          |  [ ][ ]     |  [ ][ ][ ][ ][ ][ ][ ]  |
       * |  [ ][ ][ ][ ][ ][ ]     |  [ ][ ][ ]  |  [ ][ ]  |  [ ][ ][ ]  |     [ ][ ][ ][ ][ ][ ]  |
       * |  [ ][ ][ ][ ][ ]        |  [ ][ ][ ]  |          |  [ ][ ][ ]  |        [ ][ ][ ][ ][ ]  |
       * +-------------------------+-------------+----------+-------------+-------------------------+
       *     ↑                         ↑              ↑         ↑                   ↑
       *     |                         |              |         |                   |
       *     |                         |              |         |                   +--- Right side main cluster
       *     |                         |              |         +--- Right side thumb cluster
       *     |                         |              +--- Foot pedals
       *     |                         +--- Left side thumb cluster
       *     +--- Left side main cluster
       *
       *
       *            * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
       *            * MAKE SURE YOU DISABLE WORD-WRAP ON YOUR EDITOR TO EDIT THIS FILE! *
       *            * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
       */

      MAIN {
        bindings = <
          &kp GRAVE       &kp N1        &kp N2        &kp N3        &kp N4        &kp N5        &kp N6                                                                                                                    &kp N5                &kp N6     &kp N7         &kp N8           &kp N9          &kp N0      &kp EQUAL
          &kp TAB         &kp Q         &kp W         &kp E         &kp R         &kp T         &kp LS(LA(LCTRL))                                                                                                         &kp RS(RA(RCTRL))     &kp Y      &kp U          &kp I            &kp O           &kp P       &kp MINUS
          &mt LCTRL BSLH  &hl 1 A       &kp S         &kp D         &kp F         &kp G         &kp LS(LA(LC(LGUI)))                 &kp ESC       &kp ESC                        &kp ESC      &kp ESC                    &kp RS(RA(RC(RGUI)))  &kp H      &kp J          &kp K            &kp L           &hl 1 SEMI  &mt RCTRL SQT
          &mt LSHFT LPAR  &hl 2 Z       &kp X         &kp C         &kp V         &kp B                               &none          &none         &kp HOME       &none  &none    &kp PG_UP    &none      &none                                 &kp N      &kp M          &kp COMMA        &kp DOT         &hl 2 FSLH  &mt RSHFT RPAR
          MO_TOG(1)       MO_TOG(2)     &kp LCTRL     &kp LALT      &kp LGUI                                          &hm LGUI BSPC  &kp DEL       &kp END                        &kp PG_DN    &kp ENTER  &hm RGUI SPACE                                   &kp RGUI       &kp RALT         &mt RCTRL LBKT  &hl 2 RBKT  MO_TOG(1)
        >;
      };

      FN {
        bindings = <
          &none           &kp F1        &kp F2        &kp F3        &kp F4        &kp F5        &kp F6                                                                                                                    &kp F7                &kp F8     &kp F9         &kp F10          &kp F11         &kp F12     &kp C_VOL_UP
          &none           &kp EXCL      &kp LBRC      &kp RBRC      &kp AMPS      &kp AT        &none                                                                                                                     &trans                &none      &none          &none            &none           &none       &kp C_VOL_DN
          &kp CAPS        &kp CARET     &kp LBKT      &kp RBKT      &kp PIPE      &kp DLLR      &none                                &kp F13       &kp F14                        &kp F18      &kp F17                    &trans                &kp LEFT   &kp DOWN       &kp UP           &kp RIGHT       &none       &kp K_MUTE
          &sticky_shift   &none         &kp LPAR      &kp RPAR      &kp TILDE     &kp HASH                            &trans         &trans        &kp F15        &none  &none    &kp F19      &trans     &trans                                &none      &none          &none            &none           &none       &kp RSHFT
          &tog 1          &kp LCTRL     &trans        &trans        &trans                                            &kp C_BRI_DN   &kp C_BRI_UP  &kp F16                        &kp F20      &kp K_PP   &kp K_NEXT                                       &trans         &trans           &kp RCTRL       &kp RCTRL   &tog 1
        >;
      };

      NUM {
        bindings = <
          &bt BT_PRV      &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_NXT                                                                                                                &kp LS(TAB)           &kp HASH   &kp KP_DIVIDE  &kp KP_MULTIPLY  &kp CARET       &none       &none
          &kp LC(TAB)     &none         &none         &none         &none         &none         &none                                                                                                                     &kp TAB               &kp KP_N7  &kp KP_N8      &kp KP_N9        &kp KP_PLUS     &none       &none
          &none           &none         &none         &none         &none         &none         &none                                &none         &bootloader                    &bootloader  &none                      &kp KP_ENTER          &kp KP_N4  &kp KP_N5      &kp KP_N6        &kp KP_MINUS    &none       &none
          &kp LSHFT       &none         &none         &none         &none         &none                               &trans         &trans        &none          &none  &none    &none        &trans     &trans                                &kp KP_N1  &kp KP_N2      &kp KP_N3        &kp KP_EQUAL    &none       &none
          &bt BT_CLR      &tog 2        &none         &none         &none                                             &kp BSPC       &kp DEL       &none                          &none        &kp RET    &kp SPACE                                        &kp KP_N0      &kp KP_DOT       &kp KP_COMMA    &none       &none
        >;
      };
    };
};
